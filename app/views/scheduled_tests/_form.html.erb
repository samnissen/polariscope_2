<%- model_class = ScheduledTest -%>
<%= form_for @scheduled_test, :html => { :class => 'form-horizontal form-model' } do |f| %>
  <div class="form-group">
    <%= f.label "Select Tests From Your Collections",
                :class => 'control-label col-md-4' %>
    <div class="col-md-8"></div>
  </div>
  <div class="form-group">
    <div class="col-md-12">
      <% Collection.where(user: current_user).order("created_at ASC").each do |coll| %>
        <div class="scheduled-tests-collection-container">
          <div class="collection-name-container">
            <h5 class="collection-name-header cursor-hand unbold">
              <!--<a class="btn btn-default btn-xxs btn-expand" />+</a>
              <a class="btn btn-default btn-xxs btn-contract" />-</a>-->
              <%= coll.name %>
            </h5>
          </div>

          <table class="table table-striped table-bordered hidden-table">
            <thead>
              <tr class="small-table-headings">
                <th><input type="checkbox" class="select-all-checkbox" /></th>
                <th><%= model_class.human_attribute_name(:name) %></th>
                <th><%= model_class.human_attribute_name(:description) %></th>
                <th><%= model_class.human_attribute_name(:updated_at) %></th>
              </tr>
            </thead>
            <tbody>
              <% coll.testsets.each do |testset| %>
                <tr class="testset">
                  <td class="testset-form-checkbox-column">
                    <input type="checkbox" class="testset-checkbox" value="<%= testset.id %>" />
                  </td>
                  <td class="testset-index-name-column cursor-hand" onclick="location.href='<%=collection_testset_path(coll, testset)%>'">
                    <%= testset.name %>
                  </td>
                  <td class="testset-form-description-column description-font-size cursor-hand" onclick="location.href='<%=collection_testset_path(coll, testset)%>'">
                    <%= testset.description %>
                  </td>
                  <td class="testset-form-action-updated-at-column cursor-hand" onclick="location.href='<%=collection_testset_path(coll, testset)%>'">
                    <%=l testset.updated_at, format: :short %>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>
          <div class="clearfix"></div>
        </div>
      <% end %>
    </div>
  </div>

  <hr />

  <div class="form-group">
    <%= f.label :browser, :class => 'control-label col-md-2' %>
    <div class="col-md-10">
      <%= f.collection_select(:browser_ids, BrowserType.order('name ASC'), :id, :name, {:class => 'select-list multiselect form-control'}, {:multiple => true}) %>
    </div>
  </div>
  <div class="form-group">
    <%= f.label :next_test, :class => 'control-label col-md-2' %>
    <div class="col-md-10">
      <%= f.text_field :next_test, :class => 'form-control datepicker',
                :id => "nextTestScheduledTest" %>
    </div>
  </div>
  <div class="form-group">
    <%= f.label :recurring, :class => 'control-label col-md-2' %>
    <div class="col-md-10">
      <%= f.check_box :recurring, :class => 'checkbox-field form-control',
                :id => "recurringScheduledTest" %>
    </div>
  </div>
  <div class="form-group">
    <%= f.label :notes, :class => 'control-label col-md-2' %>
    <div class="col-md-10">
      <%= f.text_area :notes, :class => 'text-area form-control',
                :id => "notesScheduledTest" %>
    </div>
  </div>

  <br />

  <div class="form-group">
    <div class='col-md-offset-2 col-md-10'>
      <%= f.submit nil, :class => 'btn btn-primary',
                  :id => "newScheduledTests" %>
      <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                  scheduled_tests_path, :class => 'btn btn-default' %>
    </div>
  </div>
<% end %>

<script>
  $( document ).ready(function() {
    $('.hidden-table').hide();
    $('.btn-contract').hide();

    $('#newScheduledTests').attr('disabled','disabled');

    $('#scheduled_test_browser_ids').multiselect();

    var testsetIds = [];
    var browserIds = [];

    unblockEntry = function() {
      $('#newScheduledTests').prop('disabled', true);

      if ($(".testset-checkbox:checked").length > 0) {
        if ($(".multiselect-container input:checkbox:checked").length > 0) {
          $('#newScheduledTests').removeAttr('disabled');
        }
      }
    }

    postNewScheduledTest = function() {
      $('.testset-checkbox').each(function(i, obj) {
        if($(obj).is(':checked')) {
          console.log($(obj).val());
          var testsetId = $(obj).val();
          testsetIds.push(testsetId);
          testsetId = null;
        }
      });
      $('.browser-checkbox').each(function(i, obj) {
        if($(obj).is(':checked')) {
          console.log($(obj).val());
          var browserId = $(obj).val();
          browserIds.push(browserId);
          browserId = null;
        }
      });

      var recurringValue = $('#recurringScheduledTest').val();
      var notesValue = $('#notesScheduledTest').val();
      var nextTestValue = $('#nextTestScheduledTest').val();

      console.log(testsetIds);
      console.log(browserIds);
      console.log(recurringValue);
      console.log(notesValue);

      $.ajax({
        type: "POST",
        dataType: "json",
        url: "/scheduled_tests",
        data: {
          scheduled_test: {
            test_ids: testsetIds,
            next_test: nextTestValue,
            recurring: recurringValue,
            notes: notesValue,
            browser_ids: browserIds
          }
        },
        async: false,
        success: function(data){
          // alert(JSON.stringify(data));
          window.location.href = '/scheduled_tests';
        },
        error: function(data){
          console.log(data);
          var output = "";
          $.each(data.responseJSON, function( index, value ) {
            humanized_index = index.charAt(0).toUpperCase()+index.substr(1).toLowerCase();
            humanized_index = humanized_index.replace('_', ' ');
            output = ( "Error: " + humanized_index + " " + value );
          });
          alert(output);
        },
      });
    };

    $('#newScheduledTests').click(function(e) {
      if ($('#newScheduledTests').attr('disabled') == 'disabled') {
        return;
      }

      e.stopPropagation()
      e.preventDefault();

      postNewScheduledTest();
    });

    $('.collection-name-header').click(function(e) {
      // $('.hidden-table').not($(this).parent().next(".hidden-table")).hide();
      // $('.btn-contract').hide();
      // $('.btn-expand').show();

      $(this).parent().next(".hidden-table").slideToggle();

      // console.log($(this).children('.btn-contract'));
      // console.log($(this).children('.btn-expand'));

      // if($(this).children('.btn-expand').is(':visible')) {
        // $(this).children('.btn-expand').hide();
        // $(this).children('.btn-contract').show();
      // } else {
        // $(this).children('.btn-expand').show();
        // $(this).children('.btn-contract').hide();
      // }
    });

    $('.testset-checkbox').click(function(e) {
      if ($(this).is(":checked")) {
        var total = $(this).parent().parent().parent().find("input").size();
        var checked = $(this).parent().parent().parent().find("input:checked").size();
        if (checked == total) {
          $(this).parent().parent().parent().prev('thead').find('tr').each(function(i, el) {
            $(el).find("input[type='checkbox']").prop("checked", true);
          });
        }
      } else {
        $(this).parent().parent().parent().prev('thead').find('tr').each(function(i, el) {
          $(el).find("input[type='checkbox']").prop("checked", false);
        });
      }
    });
    $('.select-all-checkbox').click(function(e) {
      if ($(this).is(":checked")) {
        $(this).parent().parent().parent().next('tbody').find('tr').each(function(i, el) {
          $(el).find("input[type='checkbox']").prop("checked", true);
        });
      } else {
        $(this).parent().parent().parent().next('tbody').find('tr').each(function(i, el) {
          $(el).find("input[type='checkbox']").prop("checked", false);
        });
      }
    });

    $('.form-group').click(function(e){
      unblockEntry();
    });

    $('.datepicker').datetimepicker({
      showTimezone: true,
      timeFormat: 'HH:mm z'
    });

    unblockEntry();
  });
</script>
