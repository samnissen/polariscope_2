<%- model_class = Run -%>
<div class="page-header">
  <h5 class="title-class-header">
    <%= link_to 'Collection',
                collection_path(@run.collection), class: 'title-class-link' %>
    > Run
  </h5>
  <h1><%= @run.name %></h1>
  <% if @run.description %>
    <p><%= @run.description %></p>
  <% end %>
  <h6>Browsers: <%= display_browsers(@run) %></h6>
  <h6>Environment: <code><%= @run.environment.name %></code></h6>
  <h6>Created: <%= l @run.created_at, format: :short %></h6>

  <% @run.run_tests.each do |run_test| %>
    <%- run_browser_ids(run_test.id).map do |browser| %>
      <%= tag("div", class: ["outer-scroll-#{browser}"], id: ["outer-scroll-#{browser}"], style: ["display: none"]) %>
      <%= tag("div", class: ["scroller margin-zero-auto"]) %>
            <%- for @screenshot in run_test.screenshots(browser) %>
              <%- for @base64string in @screenshot %>
                <%= tag("div", class: ["margin-zero-auto"]) %>
                <img src="data:image/png;base64,<%= @base64string %>">
                </div>
              <%- end %>
            <%- end %>
        </div>
        </div>
     <%- end %>


  <!--<div class="form-group">
    <% link_to t('.destroy', :default => t("helpers.links.destroy")),
                collection_run_path(@run.collection, @run),
                :method => 'delete',
                :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },
                :class => 'btn btn-sm btn-danger' %>
  </div>-->
</div>

<div class="fieldset">
  <!--
  <div class="sticky sticky_table_header">
    <table class="table table-heading-table">
      <thead>
        <tr>
          <th class="testset-name-column">Name</th>
          <th class="run-test-description-column">Description</th>
          <th class="run-test-success-column">Test Success</th>
        </tr>
      </thead>
    </table>
  </div>
  -->

  <table class="table table-striped" style="table-layout:fixed">
       
        <tbody>
        <tr>
          <td class="testaction-toggle run-test-name-column cursor-hand"><%= run_test.name %></td>
          <td class="testaction-toggle run-test-description-column"><%= run_test.description %></td>
          <td class="run-test-success-column"><%= render partial: "rt_status", locals: {run_test: run_test} %><%= carousel_playback_button(run_test, run_test.id) %><div class="clearfix"></div></td> 
        </tr>
        <tr class="testaction-row" style="display: none;">

          <td colspan="3">
            <div class="fieldset test-action-table-container">
                              
              <h4>Test Actions</h4>

              <div class="run-test-actions">
              
                <table class="table table-striped table-bordered">
                  <thead>
                    <tr>
                      <th class="run-testaction-name-column">Name</th>
                      <th class="run-testaction-description-column">Description</th>
                      <th class="run-testaction-activity-column">Action</th>
                      <th class="run-testaction-success-column">Step Status</th>
                      
                    </tr>
                  </thead>
                  <tbody>
                  <% run_test.run_test_actions.each do |rta| %>
                    <tr class="show-hide-border-size">
                      <td class="run-testaction-name-column <%= rta.run_object_identifier && rta.run_object_identifier.has_data_or_object? ? 'action-element-toggle cursor-hand' : 'not-clickable-row' %>">
                        <%= rta.name %>
                      </td>
                      <td class="run-testaction-description-column run-description-font-size <%= rta.run_object_identifier && rta.run_object_identifier.has_data_or_object? ? 'action-element-toggle cursor-hand' : 'not-clickable-row' %>"><%= rta.description %></td>
                      <td class="run-testaction-activity-column <%= rta.run_object_identifier && rta.run_object_identifier.has_data_or_object? ? 'action-element-toggle cursor-hand' : 'not-clickable-row' %>"><%= rta.activity.action_name %></td>
                      <td class="run-testaction-success-column"><%= render partial: "rt_actions", locals: {rta: rta} %></td>
                    </tr>
                    <tr class="subset-tablerow action-element-row">
                      <td colspan='3'>
                        <h5>Element</h5>
                        <% if rta.run_object_identifier && !rta.run_object_identifier.placeholder? %>
                          <%= render :partial => 'object', :locals => { :run_test_action => rta } %>
                        <% else %>
                          <div>(none)</div>
                        <%- end %>
                      </td>
                      <td colspan='1'>
                        <h5>Data</h5>
                        <% if rta.run_object_identifier && rta.run_object_identifier.has_data? %>
                        <div class="action-data-container">
                          <ol>
                            <li>
                              <% display_data = rta.run_object_identifier.run_test_action_data.map { |action_data| %>
                                <% action_data.data %>
                              <% }.join(', ') %>
                              <code><%= display_data %></code>
                            </li>
                          </ol>
                        </div>
                        <% else %>
                          (none)
                        <%- end %>
                        </td>
                    
                    </tr>
                  <%- end %>
                  </tbody>
                </table>
              </div>
              </td>

            
          </tr>
          <% end %>
        </tbody>
      </table>
    </div>

  <div class="form-group">
    <%= link_to t('.back', :default => t("helpers.links.back")),
                collection_path(@run.collection), :class => 'btn btn-default'  %>
  </div>

</div>
<script>

  var action_buttons_class = "action-status-btn"
  var action_buttons_browser_class = "browser-action-status"

  var status_buttons_class = "run-status-btn"
  var status_buttons_browser_class = "browser-test-status"

  function gatherStatusBtnIds(button_type, browser_class) {
    var status_btn_ids = new Map();
    var status_btn_elements = document.getElementsByClassName(button_type);
    $.each(status_btn_elements, function ( index, value )
    {
      var browid = gatherBrowserIds(value.id, browser_class);
      status_btn_ids.set(value.id, browid);
    });
    return(status_btn_ids);
  };

  function gatherBrowserIds(html_element_id, class_identifier) {
    var re_browtype = new RegExp(/browser-type-\d*/);
    var re_runtestid = new RegExp(/run_tests\/\d*/);
    var status_browser_ids = [];
    var run_status_btn = document.getElementById(html_element_id).getElementsByClassName(class_identifier);
    var node = run_status_btn.item(0);
    if (class_identifier == 'browser-action-status') { //if it's an action button give me the run test id
    	var result = node.getAttribute('href').match(re_runtestid);
    	var result = result[0].split("/");
    	result = result[1];
    }
    else { //if it's an overall run test button give me the browser ID
    	var result = node.getAttribute('class').match(re_browtype);
    	var result = result[0]
    }
    return(result);
  };
 
</script>
<script>
  $( document ).ready(function() {

    var statusids = gatherStatusBtnIds(status_buttons_class, status_buttons_browser_class); //array containing overall Run Status buttons
    var btnids_map = gatherStatusBtnIds(action_buttons_class, action_buttons_browser_class); //array containing all Action Status buttons
    
    var pendingRuns = []

    statusids.forEach(function (value, key) {
      pendingRuns.push(document.getElementById(key).getElementsByClassName("status-pending"));
    }, statusids)

    $('.testaction-row').hide();

    $('.action-element-row').hide();
    
    if (pendingRuns[0].length > 0) { //on page ready check if the overall run statuses are Passed/Failed. If so we don't need to start live updating of run status buttons.
      console.log("Pending run detected, launching live update status.")
      var refreshStatus = setInterval(updateItems, 12000);
    }
    else {
      console.log("Overall run status already updated. No live updates will be processed.");
    };

    function updateItems() {
      if (btnids_map.size > 0) {  
        var btnids = btnids_map.keys();
        var update_target = btnids.next().value;
        var update_target_status = document.getElementById(update_target).getElementsByClassName("status-pending");
        if (update_target_status.length > 0) {
          var url = $(location).attr('href') + '/update_action_status'; //obtain current URL and append our method call
          $('#' + update_target).load(url, 'status_action_id=' + update_target);  //pass the URL along with a parameter
        }
        else {
          var fail_list = document.getElementById(update_target).getElementsByClassName("status-failed");
          if (fail_list.length > 0) {
            var failed_runstatus = btnids_map.get(update_target);
            for (var [key, value] of btnids_map) { //remove all items from the array that share the same browser ID
              if (value == failed_runstatus) {
                btnids_map.delete(key);
              }
              else {
                console.log("Run status ID didn't match, not deleting.")
              }
            }
          }  
          else {
            btnids_map.delete(update_target); //remove recently Passed item from the list
          }
        }
      }
      else {
        statusids.forEach(function (index, value) { //once all of the action statuses are updated, drop through to here to update the overall run status buttons
         var status_url = $(location).attr('href') + '/update_run_status'; //obtain current URL and append our method call
         $('#' + value).load(status_url, 'test_status_id=' + value);  //pass the URL along with a parameter
        });
        console.log("Exiting status update loop!");
        clearInterval(refreshStatus); //kill the entire status refresh loop
        }
      };

    $('.testaction-toggle').click(function (i, obj) {
      $(this).parent().next('tr').toggle('fast', function() {
        // Animation complete.
      });
    });

    $('.action-element-toggle').click(function (i, obj) {
      $(this).parent().next('.action-element-row').toggle('fast', function() {
        // Animation complete.
      });
    });
  })
</script>




